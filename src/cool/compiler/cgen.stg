sequence(e) ::= "<e; separator=\"\n\">"
sequenceSpaced(e) ::= "<e; separator=\"\n\n\">"

program(data, textFuncs, textMain) ::= <<
.data
<data>

.text
<textFuncs>

main:
<textMain>
	li $v0, 10
	syscall		#exit
>>

literal(value) ::= <<
	li $a0 <value>
>>

plus(e1, e2, dStr) ::= <<
<e1>
	sw $a0 0($sp)
	addiu $sp $sp -4
<e2>
	lw $t1 4($sp)
	add $a0 $t1 $a0
	addiu $sp $sp 4		<if(dStr)># <dStr><else><endif>
>>

minus(e1, e2, dStr) ::= <<
<e1>
	sw $a0 0($sp)
	addiu $sp $sp -4
<e2>
	lw $t1 4($sp)
	sub $a0 $t1 $a0
	addiu $sp $sp 4		<if(dStr)># <dStr><else><endif>
>>

mult(e1, e2, dStr) ::= <<
<e1>
	sw $a0 0($sp)
	addiu $sp $sp -4
<e2>
	lw $t1 4($sp)
	mult $a0 $t1
	addiu $sp $sp 4		<if(dStr)># <dStr><else><endif>
>>

div(e1, e2, dStr) ::= <<
<e1>
	sw $a0 0($sp)
	addiu $sp $sp -4
<e2>
	lw $t1 4($sp)
	div $a0 $t1
	addiu $sp $sp 4		<if(dStr)># <dStr><else><endif>
>>

uMinus(e1, dStr) ::= <<
<e1>
	move $t1 $a0
	sub $a0 $a0 $t1
	sub $a0 $a0 $t1		<if(dStr)># <dStr><else><endif>
>>

lt(e1, e2, dStr, uniqueLabelSuffix) ::= <<
<e1>
	sw $a0 0($sp)
	addiu $sp $sp -4
<e2>
	lw $t1 4($sp)
	ble $t1 $a0 true_<uniqueLabelSuffix>
	li $a0, 0
	j end_<uniqueLabelSuffix>
true_<uniqueLabelSuffix>:
	li $a0, 1
end_<uniqueLabelSuffix>:
	addiu $sp $sp 4		<if(dStr)># <dStr><else><endif>
>>

if(e1, e2, e3, dStr, uniqueLabelSuffix) ::= <<
<e1>
	beqz $a0 else_<uniqueLabelSuffix>
	<e2>
	j endif_<uniqueLabelSuffix>
else_<uniqueLabelSuffix>:
	<e3>
endif_<uniqueLabelSuffix>: <if(dStr)># <dStr><else><endif>
>>
